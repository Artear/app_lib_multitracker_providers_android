buildscript {
    repositories {
        google()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
        maven { url "http://comscore.bintray.com/Analytics" }
        mavenCentral()
    }
    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$bintrayVersion"
        classpath "com.github.dcendents:android-maven-gradle-plugin:$dcendentsVersion"
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:$dokkaVersion"
    }
}

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'com.github.ben-manes.versions' version '0.22.0'
}

ext {
    bintrayRepo = 'Android'
    bintrayName = 'Providers'

    publishedGroupId = 'com.artear.multitracker'
    libraryName = 'Providers'
    artifact = 'providers'

    libraryDescription = 'A set of common trackers and extension functionality of Multitracker'

    siteUrl = 'https://github.com/Artear/app_lib_multitracker_providers_android'
    gitUrl = 'https://github.com/Artear/app_lib_multitracker_providers_android.git'

    developerId = 'artear'
    developerName = 'Artear Moviles'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]

}

static int getVersionCode(branch) {
    def versionCodeCommand = "git rev-list --count " + branch
    return versionCodeCommand.execute().text.trim().toInteger()
}

static def getBranchName() {
    return "git rev-parse --abbrev-ref HEAD".execute().text.trim()
}

android {
    compileSdkVersion buildVersions.targetSdk
    buildToolsVersion buildVersions.buildTools

    def branch = getBranchName()
    def vCode = 0 + getVersionCode(branch)

    libraryVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${project.getName()}-${defaultConfig.versionName}-${variant.name}.aar"
        }
    }

    defaultConfig {
        minSdkVersion buildVersions.minSdk
        targetSdkVersion buildVersions.targetSdk
        versionCode vCode
        versionName libraryVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Kotlin
    implementation lib.kotlin.standardLib

    //Test
    testImplementation lib.junit.library
    testImplementation lib.androidx.testRunner
    testImplementation lib.espresso.core

    //Artear
    implementation lib.artear.multitracker
    implementation lib.artear.tools

    //ComScore
    implementation lib.comscore.library

    //Crashlytics
    implementation lib.crashlytics.library

    //Firebase
    implementation lib.firebase.core
}

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm',
                                'preview', 'b', 'ea'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-+]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

group = publishedGroupId
version = libraryVersion

apply from: 'publication.gradle'
apply from: 'bintray.gradle'